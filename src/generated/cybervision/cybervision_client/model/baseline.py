# coding: utf-8

"""
    Cisco Cyber Vision center v3 API.

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.1
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from cybervision_client import schemas  # noqa: F401


class Baseline(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            activityLastDiffTime = schemas.Int64Schema
            componentLastDiffTime = schemas.Int64Schema
        
            @staticmethod
            def countDifferences() -> typing.Type['CountDifferences']:
                return CountDifferences
            creationPeriodEnd = schemas.Int64Schema
            creationPeriodStart = schemas.Int64Schema
            creationTime = schemas.Int64Schema
            creatorEmail = schemas.StrSchema
            description = schemas.StrSchema
            id = schemas.StrSchema
            label = schemas.StrSchema
            lastEditTime = schemas.Int64Schema
            lastScanTime = schemas.Int64Schema
            nextScanTime = schemas.Int64Schema
            presetId = schemas.StrSchema
            status = schemas.StrSchema
            __annotations__ = {
                "activityLastDiffTime": activityLastDiffTime,
                "componentLastDiffTime": componentLastDiffTime,
                "countDifferences": countDifferences,
                "creationPeriodEnd": creationPeriodEnd,
                "creationPeriodStart": creationPeriodStart,
                "creationTime": creationTime,
                "creatorEmail": creatorEmail,
                "description": description,
                "id": id,
                "label": label,
                "lastEditTime": lastEditTime,
                "lastScanTime": lastScanTime,
                "nextScanTime": nextScanTime,
                "presetId": presetId,
                "status": status,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["activityLastDiffTime"]) -> MetaOapg.properties.activityLastDiffTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["componentLastDiffTime"]) -> MetaOapg.properties.componentLastDiffTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["countDifferences"]) -> 'CountDifferences': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["creationPeriodEnd"]) -> MetaOapg.properties.creationPeriodEnd: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["creationPeriodStart"]) -> MetaOapg.properties.creationPeriodStart: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["creationTime"]) -> MetaOapg.properties.creationTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["creatorEmail"]) -> MetaOapg.properties.creatorEmail: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["id"]) -> MetaOapg.properties.id: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["label"]) -> MetaOapg.properties.label: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastEditTime"]) -> MetaOapg.properties.lastEditTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastScanTime"]) -> MetaOapg.properties.lastScanTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["nextScanTime"]) -> MetaOapg.properties.nextScanTime: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presetId"]) -> MetaOapg.properties.presetId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["activityLastDiffTime", "componentLastDiffTime", "countDifferences", "creationPeriodEnd", "creationPeriodStart", "creationTime", "creatorEmail", "description", "id", "label", "lastEditTime", "lastScanTime", "nextScanTime", "presetId", "status", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["activityLastDiffTime"]) -> typing.Union[MetaOapg.properties.activityLastDiffTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["componentLastDiffTime"]) -> typing.Union[MetaOapg.properties.componentLastDiffTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["countDifferences"]) -> typing.Union['CountDifferences', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["creationPeriodEnd"]) -> typing.Union[MetaOapg.properties.creationPeriodEnd, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["creationPeriodStart"]) -> typing.Union[MetaOapg.properties.creationPeriodStart, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["creationTime"]) -> typing.Union[MetaOapg.properties.creationTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["creatorEmail"]) -> typing.Union[MetaOapg.properties.creatorEmail, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> typing.Union[MetaOapg.properties.description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["id"]) -> typing.Union[MetaOapg.properties.id, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["label"]) -> typing.Union[MetaOapg.properties.label, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastEditTime"]) -> typing.Union[MetaOapg.properties.lastEditTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastScanTime"]) -> typing.Union[MetaOapg.properties.lastScanTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["nextScanTime"]) -> typing.Union[MetaOapg.properties.nextScanTime, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presetId"]) -> typing.Union[MetaOapg.properties.presetId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union[MetaOapg.properties.status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["activityLastDiffTime", "componentLastDiffTime", "countDifferences", "creationPeriodEnd", "creationPeriodStart", "creationTime", "creatorEmail", "description", "id", "label", "lastEditTime", "lastScanTime", "nextScanTime", "presetId", "status", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        activityLastDiffTime: typing.Union[MetaOapg.properties.activityLastDiffTime, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        componentLastDiffTime: typing.Union[MetaOapg.properties.componentLastDiffTime, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        countDifferences: typing.Union['CountDifferences', schemas.Unset] = schemas.unset,
        creationPeriodEnd: typing.Union[MetaOapg.properties.creationPeriodEnd, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        creationPeriodStart: typing.Union[MetaOapg.properties.creationPeriodStart, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        creationTime: typing.Union[MetaOapg.properties.creationTime, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        creatorEmail: typing.Union[MetaOapg.properties.creatorEmail, str, schemas.Unset] = schemas.unset,
        description: typing.Union[MetaOapg.properties.description, str, schemas.Unset] = schemas.unset,
        id: typing.Union[MetaOapg.properties.id, str, schemas.Unset] = schemas.unset,
        label: typing.Union[MetaOapg.properties.label, str, schemas.Unset] = schemas.unset,
        lastEditTime: typing.Union[MetaOapg.properties.lastEditTime, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        lastScanTime: typing.Union[MetaOapg.properties.lastScanTime, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        nextScanTime: typing.Union[MetaOapg.properties.nextScanTime, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        presetId: typing.Union[MetaOapg.properties.presetId, str, schemas.Unset] = schemas.unset,
        status: typing.Union[MetaOapg.properties.status, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'Baseline':
        return super().__new__(
            cls,
            *_args,
            activityLastDiffTime=activityLastDiffTime,
            componentLastDiffTime=componentLastDiffTime,
            countDifferences=countDifferences,
            creationPeriodEnd=creationPeriodEnd,
            creationPeriodStart=creationPeriodStart,
            creationTime=creationTime,
            creatorEmail=creatorEmail,
            description=description,
            id=id,
            label=label,
            lastEditTime=lastEditTime,
            lastScanTime=lastScanTime,
            nextScanTime=nextScanTime,
            presetId=presetId,
            status=status,
            _configuration=_configuration,
            **kwargs,
        )

from cybervision_client.model.count_differences import CountDifferences
