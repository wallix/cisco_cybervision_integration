# coding: utf-8

"""
    Cisco Cyber Vision center v3 API.

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 0.1
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from cybervision_client import schemas  # noqa: F401


class PresetDataInfo(
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """


    class MetaOapg:
        
        class properties:
            forceRefreshRequested = schemas.BoolSchema
            lastRefresh = schemas.Int64Schema
            lastRefreshDuration = schemas.Int64Schema
            presetDataAvailable = schemas.BoolSchema
            refreshInProgress = schemas.BoolSchema
            __annotations__ = {
                "forceRefreshRequested": forceRefreshRequested,
                "lastRefresh": lastRefresh,
                "lastRefreshDuration": lastRefreshDuration,
                "presetDataAvailable": presetDataAvailable,
                "refreshInProgress": refreshInProgress,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["forceRefreshRequested"]) -> MetaOapg.properties.forceRefreshRequested: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastRefresh"]) -> MetaOapg.properties.lastRefresh: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["lastRefreshDuration"]) -> MetaOapg.properties.lastRefreshDuration: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["presetDataAvailable"]) -> MetaOapg.properties.presetDataAvailable: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["refreshInProgress"]) -> MetaOapg.properties.refreshInProgress: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["forceRefreshRequested", "lastRefresh", "lastRefreshDuration", "presetDataAvailable", "refreshInProgress", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["forceRefreshRequested"]) -> typing.Union[MetaOapg.properties.forceRefreshRequested, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastRefresh"]) -> typing.Union[MetaOapg.properties.lastRefresh, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["lastRefreshDuration"]) -> typing.Union[MetaOapg.properties.lastRefreshDuration, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["presetDataAvailable"]) -> typing.Union[MetaOapg.properties.presetDataAvailable, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["refreshInProgress"]) -> typing.Union[MetaOapg.properties.refreshInProgress, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["forceRefreshRequested", "lastRefresh", "lastRefreshDuration", "presetDataAvailable", "refreshInProgress", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        forceRefreshRequested: typing.Union[MetaOapg.properties.forceRefreshRequested, bool, schemas.Unset] = schemas.unset,
        lastRefresh: typing.Union[MetaOapg.properties.lastRefresh, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        lastRefreshDuration: typing.Union[MetaOapg.properties.lastRefreshDuration, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        presetDataAvailable: typing.Union[MetaOapg.properties.presetDataAvailable, bool, schemas.Unset] = schemas.unset,
        refreshInProgress: typing.Union[MetaOapg.properties.refreshInProgress, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'PresetDataInfo':
        return super().__new__(
            cls,
            *_args,
            forceRefreshRequested=forceRefreshRequested,
            lastRefresh=lastRefresh,
            lastRefreshDuration=lastRefreshDuration,
            presetDataAvailable=presetDataAvailable,
            refreshInProgress=refreshInProgress,
            _configuration=_configuration,
            **kwargs,
        )
