# coding: utf-8

"""
    WALLIX Bastion Rest API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 3.12
    Contact: support@wallix.com
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from bastion_client import schemas  # noqa: F401


class ScanJobProgress(
    schemas.ComposedBase,
    schemas.DictSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    In progress result of the step
    """


    class MetaOapg:
        
        @staticmethod
        def discriminator():
            return {
                'type': {
                    'ad_for_accounts': ScanJobProgressAdForAccounts,
                    'ad_for_devices': AdScanForDevicesProgress,
                    'ad_scan_for_devices_progress': AdScanForDevicesProgress,
                    'azure_for_devices': AzureScanForDevicesProgress,
                    'azure_scan_for_devices_progress': AzureScanForDevicesProgress,
                    'devices_for_accounts': DevicesScanForAccountsProgress,
                    'devices_scan_for_accounts_progress': DevicesScanForAccountsProgress,
                    'dns_resolution': DnsResolution,
                    'networks_for_devices': NetworksScanForDevicesProgress,
                    'networks_scan_for_devices_progress': NetworksScanForDevicesProgress,
                    'scan_job_progress_ad_for_accounts': ScanJobProgressAdForAccounts,
                }
            }
        
        @classmethod
        @functools.lru_cache()
        def any_of(cls):
            # we need this here to make our import statements work
            # we must store _composed_schemas in here so the code is only run
            # when we invoke this method. If we kept this at the class
            # level we would get an error because the class level
            # code would be run when this module is imported, and these composed
            # classes don't exist yet because their module has not finished
            # loading
            return [
                NetworksScanForDevicesProgress,
                DevicesScanForAccountsProgress,
                AdScanForDevicesProgress,
                ScanJobProgressAdForAccounts,
                AzureScanForDevicesProgress,
                DnsResolution,
            ]


    def __new__(
        cls,
        *_args: typing.Union[dict, frozendict.frozendict, ],
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ScanJobProgress':
        return super().__new__(
            cls,
            *_args,
            _configuration=_configuration,
            **kwargs,
        )

from bastion_client.model.ad_scan_for_devices_progress import AdScanForDevicesProgress
from bastion_client.model.azure_scan_for_devices_progress import AzureScanForDevicesProgress
from bastion_client.model.devices_scan_for_accounts_progress import DevicesScanForAccountsProgress
from bastion_client.model.dns_resolution import DnsResolution
from bastion_client.model.networks_scan_for_devices_progress import NetworksScanForDevicesProgress
from bastion_client.model.scan_job_progress_ad_for_accounts import ScanJobProgressAdForAccounts
